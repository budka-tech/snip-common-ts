// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "server/server.proto" (package "server", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Server } from "./server";
import type { UnsubscribeRequest } from "./server";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Empty } from "../google/protobuf/empty";
import type { Request } from "./server";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service server.Server
 */
export interface IServerClient {
    /**
     * @generated from protobuf rpc: Call(server.Request) returns (google.protobuf.Empty);
     */
    call(input: Request, options?: RpcOptions): UnaryCall<Request, Empty>;
    /**
     * @generated from protobuf rpc: Subscribe(server.Request) returns (google.protobuf.Empty);
     */
    subscribe(input: Request, options?: RpcOptions): UnaryCall<Request, Empty>;
    /**
     * @generated from protobuf rpc: UnSubscribe(server.UnsubscribeRequest) returns (google.protobuf.Empty);
     */
    unSubscribe(input: UnsubscribeRequest, options?: RpcOptions): UnaryCall<UnsubscribeRequest, Empty>;
}
/**
 * @generated from protobuf service server.Server
 */
export class ServerClient implements IServerClient, ServiceInfo {
    typeName = Server.typeName;
    methods = Server.methods;
    options = Server.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Call(server.Request) returns (google.protobuf.Empty);
     */
    call(input: Request, options?: RpcOptions): UnaryCall<Request, Empty> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Request, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Subscribe(server.Request) returns (google.protobuf.Empty);
     */
    subscribe(input: Request, options?: RpcOptions): UnaryCall<Request, Empty> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<Request, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UnSubscribe(server.UnsubscribeRequest) returns (google.protobuf.Empty);
     */
    unSubscribe(input: UnsubscribeRequest, options?: RpcOptions): UnaryCall<UnsubscribeRequest, Empty> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<UnsubscribeRequest, Empty>("unary", this._transport, method, opt, input);
    }
}
