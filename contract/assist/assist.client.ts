// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "assist/assist.proto" (package "assist", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Assist } from "./assist";
import type { GetMessagesInChatResponse } from "./assist";
import type { GetMessagesInChatRequest } from "./assist";
import type { GetMessageByIDResponse } from "./assist";
import type { GetMessageByIDRequest } from "./assist";
import type { CreateMessageResponse } from "./assist";
import type { CreateMessageRequest } from "./assist";
import type { GetUserFoldersResponse } from "./assist";
import type { GetUserFoldersRequest } from "./assist";
import type { GetFolderByIDResponse } from "./assist";
import type { GetFolderByIDRequest } from "./assist";
import type { DeleteFolderRequest } from "./assist";
import type { CreateFolderResponse } from "./assist";
import type { CreateFolderRequest } from "./assist";
import type { GetUserChatsResponse } from "./assist";
import type { GetUserChatsRequest } from "./assist";
import type { GetChatsInFolderResponse } from "./assist";
import type { GetChatsInFolderRequest } from "./assist";
import type { GetChatByIDResponse } from "./assist";
import type { GetChatByIDRequest } from "./assist";
import type { Response } from "../common/common";
import type { DeleteChatRequest } from "./assist";
import type { ChangeChatTitleResponse } from "./assist";
import type { ChangeChatTitleRequest } from "./assist";
import type { ChangeChatFolderResponse } from "./assist";
import type { ChangeChatFolderRequest } from "./assist";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CreateChatResponse } from "./assist";
import type { CreateChatRequest } from "./assist";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service assist.Assist
 */
export interface IAssistClient {
    /**
     * @generated from protobuf rpc: CreateChat(assist.CreateChatRequest) returns (assist.CreateChatResponse);
     */
    createChat(input: CreateChatRequest, options?: RpcOptions): UnaryCall<CreateChatRequest, CreateChatResponse>;
    /**
     * @generated from protobuf rpc: ChangeChatFolder(assist.ChangeChatFolderRequest) returns (assist.ChangeChatFolderResponse);
     */
    changeChatFolder(input: ChangeChatFolderRequest, options?: RpcOptions): UnaryCall<ChangeChatFolderRequest, ChangeChatFolderResponse>;
    /**
     * @generated from protobuf rpc: ChangeChatTitle(assist.ChangeChatTitleRequest) returns (assist.ChangeChatTitleResponse);
     */
    changeChatTitle(input: ChangeChatTitleRequest, options?: RpcOptions): UnaryCall<ChangeChatTitleRequest, ChangeChatTitleResponse>;
    /**
     * @generated from protobuf rpc: DeleteChat(assist.DeleteChatRequest) returns (common.Response);
     */
    deleteChat(input: DeleteChatRequest, options?: RpcOptions): UnaryCall<DeleteChatRequest, Response>;
    /**
     * @generated from protobuf rpc: GetChatByID(assist.GetChatByIDRequest) returns (assist.GetChatByIDResponse);
     */
    getChatByID(input: GetChatByIDRequest, options?: RpcOptions): UnaryCall<GetChatByIDRequest, GetChatByIDResponse>;
    /**
     * @generated from protobuf rpc: GetChatsInFolder(assist.GetChatsInFolderRequest) returns (assist.GetChatsInFolderResponse);
     */
    getChatsInFolder(input: GetChatsInFolderRequest, options?: RpcOptions): UnaryCall<GetChatsInFolderRequest, GetChatsInFolderResponse>;
    /**
     * @generated from protobuf rpc: GetUserChats(assist.GetUserChatsRequest) returns (assist.GetUserChatsResponse);
     */
    getUserChats(input: GetUserChatsRequest, options?: RpcOptions): UnaryCall<GetUserChatsRequest, GetUserChatsResponse>;
    /**
     * @generated from protobuf rpc: CreateFolder(assist.CreateFolderRequest) returns (assist.CreateFolderResponse);
     */
    createFolder(input: CreateFolderRequest, options?: RpcOptions): UnaryCall<CreateFolderRequest, CreateFolderResponse>;
    /**
     * @generated from protobuf rpc: DeleteFolder(assist.DeleteFolderRequest) returns (common.Response);
     */
    deleteFolder(input: DeleteFolderRequest, options?: RpcOptions): UnaryCall<DeleteFolderRequest, Response>;
    /**
     * @generated from protobuf rpc: GetFolderByID(assist.GetFolderByIDRequest) returns (assist.GetFolderByIDResponse);
     */
    getFolderByID(input: GetFolderByIDRequest, options?: RpcOptions): UnaryCall<GetFolderByIDRequest, GetFolderByIDResponse>;
    /**
     * @generated from protobuf rpc: GetUserFolders(assist.GetUserFoldersRequest) returns (assist.GetUserFoldersResponse);
     */
    getUserFolders(input: GetUserFoldersRequest, options?: RpcOptions): UnaryCall<GetUserFoldersRequest, GetUserFoldersResponse>;
    /**
     * @generated from protobuf rpc: CreateMessage(assist.CreateMessageRequest) returns (assist.CreateMessageResponse);
     */
    createMessage(input: CreateMessageRequest, options?: RpcOptions): UnaryCall<CreateMessageRequest, CreateMessageResponse>;
    /**
     * @generated from protobuf rpc: GetMessageByID(assist.GetMessageByIDRequest) returns (assist.GetMessageByIDResponse);
     */
    getMessageByID(input: GetMessageByIDRequest, options?: RpcOptions): UnaryCall<GetMessageByIDRequest, GetMessageByIDResponse>;
    /**
     * @generated from protobuf rpc: GetMessagesInChat(assist.GetMessagesInChatRequest) returns (assist.GetMessagesInChatResponse);
     */
    getMessagesInChat(input: GetMessagesInChatRequest, options?: RpcOptions): UnaryCall<GetMessagesInChatRequest, GetMessagesInChatResponse>;
}
/**
 * @generated from protobuf service assist.Assist
 */
export class AssistClient implements IAssistClient, ServiceInfo {
    typeName = Assist.typeName;
    methods = Assist.methods;
    options = Assist.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateChat(assist.CreateChatRequest) returns (assist.CreateChatResponse);
     */
    createChat(input: CreateChatRequest, options?: RpcOptions): UnaryCall<CreateChatRequest, CreateChatResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateChatRequest, CreateChatResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeChatFolder(assist.ChangeChatFolderRequest) returns (assist.ChangeChatFolderResponse);
     */
    changeChatFolder(input: ChangeChatFolderRequest, options?: RpcOptions): UnaryCall<ChangeChatFolderRequest, ChangeChatFolderResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeChatFolderRequest, ChangeChatFolderResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChangeChatTitle(assist.ChangeChatTitleRequest) returns (assist.ChangeChatTitleResponse);
     */
    changeChatTitle(input: ChangeChatTitleRequest, options?: RpcOptions): UnaryCall<ChangeChatTitleRequest, ChangeChatTitleResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChangeChatTitleRequest, ChangeChatTitleResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteChat(assist.DeleteChatRequest) returns (common.Response);
     */
    deleteChat(input: DeleteChatRequest, options?: RpcOptions): UnaryCall<DeleteChatRequest, Response> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteChatRequest, Response>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetChatByID(assist.GetChatByIDRequest) returns (assist.GetChatByIDResponse);
     */
    getChatByID(input: GetChatByIDRequest, options?: RpcOptions): UnaryCall<GetChatByIDRequest, GetChatByIDResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetChatByIDRequest, GetChatByIDResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetChatsInFolder(assist.GetChatsInFolderRequest) returns (assist.GetChatsInFolderResponse);
     */
    getChatsInFolder(input: GetChatsInFolderRequest, options?: RpcOptions): UnaryCall<GetChatsInFolderRequest, GetChatsInFolderResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetChatsInFolderRequest, GetChatsInFolderResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetUserChats(assist.GetUserChatsRequest) returns (assist.GetUserChatsResponse);
     */
    getUserChats(input: GetUserChatsRequest, options?: RpcOptions): UnaryCall<GetUserChatsRequest, GetUserChatsResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetUserChatsRequest, GetUserChatsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateFolder(assist.CreateFolderRequest) returns (assist.CreateFolderResponse);
     */
    createFolder(input: CreateFolderRequest, options?: RpcOptions): UnaryCall<CreateFolderRequest, CreateFolderResponse> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateFolderRequest, CreateFolderResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteFolder(assist.DeleteFolderRequest) returns (common.Response);
     */
    deleteFolder(input: DeleteFolderRequest, options?: RpcOptions): UnaryCall<DeleteFolderRequest, Response> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteFolderRequest, Response>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetFolderByID(assist.GetFolderByIDRequest) returns (assist.GetFolderByIDResponse);
     */
    getFolderByID(input: GetFolderByIDRequest, options?: RpcOptions): UnaryCall<GetFolderByIDRequest, GetFolderByIDResponse> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetFolderByIDRequest, GetFolderByIDResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetUserFolders(assist.GetUserFoldersRequest) returns (assist.GetUserFoldersResponse);
     */
    getUserFolders(input: GetUserFoldersRequest, options?: RpcOptions): UnaryCall<GetUserFoldersRequest, GetUserFoldersResponse> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetUserFoldersRequest, GetUserFoldersResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateMessage(assist.CreateMessageRequest) returns (assist.CreateMessageResponse);
     */
    createMessage(input: CreateMessageRequest, options?: RpcOptions): UnaryCall<CreateMessageRequest, CreateMessageResponse> {
        const method = this.methods[11], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateMessageRequest, CreateMessageResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetMessageByID(assist.GetMessageByIDRequest) returns (assist.GetMessageByIDResponse);
     */
    getMessageByID(input: GetMessageByIDRequest, options?: RpcOptions): UnaryCall<GetMessageByIDRequest, GetMessageByIDResponse> {
        const method = this.methods[12], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetMessageByIDRequest, GetMessageByIDResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetMessagesInChat(assist.GetMessagesInChatRequest) returns (assist.GetMessagesInChatResponse);
     */
    getMessagesInChat(input: GetMessagesInChatRequest, options?: RpcOptions): UnaryCall<GetMessagesInChatRequest, GetMessagesInChatResponse> {
        const method = this.methods[13], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetMessagesInChatRequest, GetMessagesInChatResponse>("unary", this._transport, method, opt, input);
    }
}
