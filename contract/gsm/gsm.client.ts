// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "gsm/gsm.proto" (package "gsm", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Sms } from "./gsm";
import type { GetFlashCallResponse } from "./gsm";
import type { GetFlashCallRequest } from "./gsm";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetSmsResponse } from "./gsm";
import type { GetSmsRequest } from "./gsm";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service gsm.Sms
 */
export interface ISmsClient {
    /**
     * @generated from protobuf rpc: GetSms(gsm.GetSmsRequest) returns (gsm.GetSmsResponse);
     */
    getSms(input: GetSmsRequest, options?: RpcOptions): UnaryCall<GetSmsRequest, GetSmsResponse>;
    /**
     * @generated from protobuf rpc: GetFlashCall(gsm.GetFlashCallRequest) returns (gsm.GetFlashCallResponse);
     */
    getFlashCall(input: GetFlashCallRequest, options?: RpcOptions): UnaryCall<GetFlashCallRequest, GetFlashCallResponse>;
}
/**
 * @generated from protobuf service gsm.Sms
 */
export class SmsClient implements ISmsClient, ServiceInfo {
    typeName = Sms.typeName;
    methods = Sms.methods;
    options = Sms.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetSms(gsm.GetSmsRequest) returns (gsm.GetSmsResponse);
     */
    getSms(input: GetSmsRequest, options?: RpcOptions): UnaryCall<GetSmsRequest, GetSmsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetSmsRequest, GetSmsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetFlashCall(gsm.GetFlashCallRequest) returns (gsm.GetFlashCallResponse);
     */
    getFlashCall(input: GetFlashCallRequest, options?: RpcOptions): UnaryCall<GetFlashCallRequest, GetFlashCallResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetFlashCallRequest, GetFlashCallResponse>("unary", this._transport, method, opt, input);
    }
}
